@model IEnumerable<EduHubLiving.Models.PropertyListingDto>

@{
    ViewBag.Title = "Property Listing";
}

<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between">
            <div><h5>@ViewBag.Title</h5></div>

            <div>
                @Html.ActionLink("Create New", "CreatePropertyListing")
            </div>
        </div>

    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>@Html.DisplayNameFor(model => model.Name)</th>
                        <th>@Html.DisplayNameFor(model => model.Price)</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                        <th>@Html.DisplayNameFor(model => model.Type)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.MediaItems != null && item.MediaItems.Count > 0)
                                {
                                    <img src="@item.MediaItems.First().Url" alt="Image" class="img-fluid" width="150" />
                                }
                                else
                                {
                                    <span>No image available</span>
                                }
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Price)</td>
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td>
                                <a href="/agent/property-listing/update/@item.Slug">Edit</a>

                                <form id="deleteForm-@item.Id" action="/api/property-listings/@item.Id" method="post" onsubmit="return confirm('Do you want to delete this item?');">
                                    <input type="hidden" name="uid" value="@item.Id" />
                                    <input type="submit" value="Delete" class="btn btn-link delete-btn" />
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<script>
    document.querySelectorAll('.delete-btn').forEach(function (button) {
        button.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent default form submission
            var form = this.closest('form'); // Get the closest form element
            var confirmMessage = form.dataset.confirmMessage || 'Do you want to delete this item?';
            if (confirm(confirmMessage)) {
                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form)
                }).then(function (response) {
                    if (response.ok) {
                        // Handle success, e.g., redirect or update UI
                        console.log('Item deleted successfully.');
                        toastr.success('Item deleted successfully.');
                        setTimeout(() => window.location.reload(), 1000)
                    } else {
                        // Handle error
                        console.error('Failed to delete item.');
                        throw Error("failed to delete");
                    }
                }).catch(function (error) {
                    // Handle network error
                    console.error('Network error:', error);

                    toastr.error('Failed to delete item.', 'Error', {
                        closeButton: true,
                        progressBar: true,
                        positionClass: 'toast-top-right',
                        timeOut: 5000 // Auto-dismiss timeout in milliseconds
                    });
                });
            }
        });
    });
</script>